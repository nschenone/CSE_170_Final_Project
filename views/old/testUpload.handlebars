<html>

<head>
	<title>Test Upload</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Bootstrap -->
	<link href="css/bootstrap.css" rel="stylesheet">
	<link href="css/bootstrap-theme.css" rel="stylesheet">
	<link href="css/style.css" rel="stylesheet">
</head>

<body>
	<div class="bg">
		<div class="header">
			<div class="header-text">Test Upload</div>
		</div>

		<input type="file" id="file-input">

		<input type="submit" value="Upload file">

		{{!-- <form method="POST" action="/save-details">
			<input type="hidden" id="avatar-url" name="avatar-url" value="/images/default.png">
			<input type="submit" value="Upload file">
		</form> --}}

		<script>

			/*
			  Function to carry out the actual PUT request to S3 using the signed request from the app.
			*/
			function uploadFile(file, signedRequest, url) {
				const xhr = new XMLHttpRequest();
				xhr.open('PUT', signedRequest);
				xhr.onreadystatechange = () => {
					if (xhr.readyState === 4) {
						if (xhr.status === 200) {
						}
						else {
							alert('Could not upload file.');
						}
					}
				};
				console.log(xhr);
				xhr.send(file);
			}

			/*
			  Function to get the temporary signed request from the app.
			  If request successful, continue to upload the file using this signed
			  request.
			*/
			function getSignedRequest(file) {
				const xhr = new XMLHttpRequest();
				xhr.open('GET', `/sign-s3?file-name=${file.name}&file-type=${file.type}`);
				xhr.onreadystatechange = () => {
					if (xhr.readyState === 4) {
						if (xhr.status === 200) {
							const response = JSON.parse(xhr.responseText);
							uploadFile(file, response.signedRequest, response.url);
						}
						else {
							alert('Could not get signed URL.');
						}
					}
				};
				xhr.send();
			}

			/*
			 Function called when file input updated. If there is a file selected, then
			 start upload procedure by asking for a signed request from the app.
			*/
			function initUpload() {
				const files = document.getElementById('file-input').files;
				const file = files[0];
				if (file == null) {
					return alert('No file selected.');
				}
				getSignedRequest(file);
			}

			/*
			 Bind listeners when the page loads.
			*/
			(() => {
				document.getElementById('file-input').onchange = initUpload;
			})();

		</script>

	</div>
	</div>

	<script src="js/jquery-1.11.0.js"></script>
	<script src="js/bootstrap.js"></script>
</body>

</html>